/* Using the JavaScript language, have the function LetterCountI(str) take the str 
parameter being passed and return the first word with the greatest number of repeated letters. 
For example: "Today, is the greatest day ever!" should return greatest because it has 2 e's 
(and 2 t's) and it comes before ever which also has 2 e's. If there are no words with repeating 
letters return -1. Words will be separated by spaces. */

function LetterCountI(str) { 

	var wordArray = str.split(' '); 
	var wordsArray = [];
	var words = {};
	var getWordsArray = function(){
		makeWordObjects(wordArray, words, wordsArray, iterateWords);
	};
	

	var makeWordObjects = function(arr, obj, resultArr, callback) {
		console.log('makeWordObjects passed array: ' + arr);
		for (i = 0; i < arr.length; i++){
			var currentWord = arr[i];
			obj[currentWord] = {
				id: currentWord,
				count: 0,
				getIdAndCount: function(){
					console.log(this.id + ": " + this.count);
					return [this.id, this.count];
					}
			}
			resultArr.push(obj[currentWord]);
		}
		console.log(typeof resultArr);
		callback(resultArr);
		
	}

	var setWordCount = function (word, number) {	//setWordCount('and', 90);
		console.log('setWordCount called on: ' + word);
		var wordToCount = word;
		for (each in wordsArray){
			
				// if (each.indexOf('id') == word){
					console.log(each[each.indexOf(word)]);
				// }
		}
		//thisObj.count = number;
		console.log(wordToCount + ":" + number);
		
	}

	var countDoubles = function(arr, word) {
		var count = 0;
		var originalArrLength = arr.length;	
		c = 0;
		while (c <= originalArrLength && arr[0]!= undefined){
			console.log('c is: ' + c + 'for: ' + arr);
			//var originalArrLength = arr.length;		
			for (j = originalArrLength - 1; j > 0; j--) {
				console.log('j: ' + j);

					var checkLetter = arr[0];
					console.log("checking letter: " + checkLetter);
				

					if (checkLetter == arr[j]){
						count++;
						setWordCount(word, count);
						
						arr.splice(0,1);
						j--;
						arr.splice(j,1);
						j++;
						console.log('arr after splice: ' + arr);

						j = arr.length;

						console.log('j: ' + j);
						
					} else {
						console.log('arr: ' + arr);

					}
			}	
				
			arr.shift();
			console.log('arr after shift: ' + arr);
			j = arr.length -1 ;
			console.log('j is: ' + j);
			c++;
			console.log('c is: ' + c);

		}
		console.log(wordsArray);
		debugger;
		
	}

	var splitLetters = function(word) {

		console.log(word);

		var lettersArray = word.split('');
		console.log(lettersArray);

		for (k = 0; k < lettersArray.length; k++){
			if (!/^[a-zA-Z]/.test(lettersArray[k])) {
				lettersArray.splice(k,1);
				console.log(lettersArray);
			}
		}
		

		countDoubles(lettersArray, word);
	}
	
	var showResultObj = function(){
		//for (i = 0; i < words.length; i++){
			console.log('result object: ' + wordsArray);
		//}	
	}

	var iterateWords = function(arr){
		console.log(arr);

		for (i = 0; i < arr.length; i++){
			var objToSplit = arr;
//			console.log("typeof objToSplit: " + typeof objToSplit);
//			console.log("typeof objToSplit[i].id: " + typeof objToSplit[i].id);
//			console.log("objToSplit: " + objToSplit);
			var iterateWord = objToSplit[i].id;
//			console.log("typeof iterateWord: " + typeof iterateWord);
			splitLetters(iterateWord);
		}
		
	}

	//console.log('wordsArray' + wordsArray);
//	console.log(getObjByWordArray(wordArray[1])); 

	getWordsArray();

}
   
LetterCountI('finding goodness in all things, may we always seek peace and joy, namaste.');
//LetterCountI('No words');
//LetterCountI('Hello apple pie');
